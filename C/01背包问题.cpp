// 01背包问题 	最大容量为 M 物品个数为 N  每个物品的大小为 w[]  每个物品的价值为 p[] 
#include<stdio.h>
int s[10][100];//先开辟一片比较大的二维空间 以i j 为横纵坐标 全部设置成为0 		代表着 装入第 i 个物品以前 获得的最大价值 
int main()
{
	int M,N,w[100],p[100];
	scanf("%d%d",&N,&M);
	int i,j;
	for(i=1;i<=N;i++)
	{
		scanf("%d%d",&w[i],&p[i]);
	}
	for(i=1;i<=M;i++)				// 现在 i 代表  背包可用空间大小   M 最大空间 
	{
		for(j=1;j<=N;j++)			// j 代表  第几个物品 
		{
			if(w[j]>i)
			{
				s[j][i]=s[j-1][i];  // 比如第三个物品空间比可用空间大  则   3 个物品和 2 个物品 所得到的价值相等 
			 } 
			 //下面就代表了  可用空间  比  这个物品大 
			else if(s[j-1][i-w[j]]+p[j]>s[j-1][i])//如果 这个物品的价值p[i] 加上 上一个物品的价值(可能上一个物品价值为0，除非剩余空间如果还可以放一个物品） 大于上一个物品的价值  则 
			{
				s[j][i]=s[j-1][i-w[j]]+p[j];//把第二个物品的价值 加上第一个物品的价值 放到坐标系中 
			}
			else								 // 如果 这个物品的价值p[i] 加上 上一个物品的价值小于或者等于 上一个物品 
			s[j][i]=s[j-1][i]; 
		};
	 } 
	 printf("max=%d\n",s[N][M]); 
	 //下面就是建立的坐标系 
   for(j=0;j<=N;j++)
   for(i=0;i<=M;i++)
    {
     	printf("%4d",s[j][i]);
    	if(M==i)
		printf("\n");
    }
	return 0;
}
/*
10 3
3 4
4 5
5 6
*/

