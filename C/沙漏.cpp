 /*
 本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“*”，要求按下列格式打印

*****
 ***
  *
 ***
*****
所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。

给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。

输入格式：

输入在一行给出1个正整数N（<=1000）和一个符号，中间以空格分隔。

输出格式：

首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。

输入样例：
19 *
输出样例：
*****
 ***
  *
 ***
*****
2
 */
#include<stdio.h>
#include<math.h>
int main()
{
	int n,N,i,j,max;
	char a;
	scanf("%d",&n);
	getchar();
	a = getchar();
	max=(int )sqrt(2*(n+1))-1;//我设的是最大的一行有多少个  字符       百度设的是上半部分的行数    相比 百度上的更好 
	N=(max+1)/2;
	
	for(j=0;j<N;j++)
	{
		for(i=0;i<j;i++)
		putchar(' ');
		
		for(i=0;i<(N-j)*2-1;i++)
		putchar(a);
		printf("\n");
	}
	for(j=0;j<N-1;j++)
	{
		for(i=0;i<N-2-j;i++)
		putchar(' ');
		for(i=0;i<(j+1)*2+1;i++)
		putchar(a);
		printf("\n");
	}
	printf("%d",n-N*N*2+1);
	return 0;
 } 
/*
自己也做出来了这道题，最开始是错误，后来修改，部分对，再次修改，全对，可是非常麻烦
一百度看到他们的代码，，很简单，，于是借鉴、、最开始不明白   后来自己写了一遍就明白了
这段代码 也是我自己写的  自己优化的代码，灵感来于 百度
写完之后就明白了他们的代码，，他们思路清晰，要啥 求啥。

总结：
1.不要把数学隔离开来，算法，基本上就是数学的延伸。
2.以后再碰见这种题，不要光看，不要跟着表现上的思路，先画图。再出规律，，，最好  用数学上的思路去解
*/ 
