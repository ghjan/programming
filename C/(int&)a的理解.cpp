/*(int&)a:将a的引用强制转换为整型,意思是a所在的内存，本来定义的时候为float类型,并初始为1.0f，
但现在我要按int类型解释这段内存（也就是说a所在的内存地址中的数据本来是按float型存储表示的，你非要按int型来解释不可）。
1.0f   在内存中的存储为
0   011   1111   1   000   0000   0000   0000   0000   0000.
把他按整型数解释为2^29+2^28+2^27+2^26+2^25+2^24+2^23=1065353216
(int&)a 相当于
    *(int*)(&a)
	1.首先对float型变量取地址
	2.强制类型转换为整型变量的地址（地址的值并没有变）
	3.将该地址指向的变量输出（但是由于整型和浮点型数据存储方式的不同，输出结果是不同的）
*/ 
#include <iostream>
using namespace std;

int main()
{
	float a = 1.0f;
	//int b1 = (int)&a;			//把地址直接转化为  int 在vs中可以 
	int b2 = (int&)a;
	//cout << b1 << endl;//1768452
	cout << b2 << endl;//1092616192
	cout << a  << endl;	
}
